{"version":3,"sources":["terrasummary/columns.js","terrasummary/terrasummary.js","mockdata.js","App.js","serviceWorker.js","index.js"],"names":["COL_STYLE","fontSize","fontWeight","paddingLeft","paddingRight","require","Map","fromJS","customStyles","headCells","style","createTheme","background","text","primary","secondary","disabled","TerraSummary","props","state","playerStates","undefined","data","countAwards","compact","streamerMode","handleCountAwards","bind","handleCompact","handleStreamerMode","socket","io","on","console","log","setState","merge","event","this","Boolean","target","checked","awards","columns","name","selector","width","conditionalCellStyles","when","row","Color","parseInt","split","sortable","omit","scores","entrySeq","map","value","s","get","color","set","getIn","reduce","acc","val","totalWithoutAwards","theme","toJS","dense","noHeader","subHeader","subHeaderAlign","subHeaderComponent","marginBottom","marginLeft","float","marginRight","type","onChange","React","mockData","App","className","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c1201ce1.chunk.js","sourcesContent":["const CELL_PADDING = 3;\r\nconst SMALL_COL_WIDTH = \"32px\";\r\n\r\nconst COL_STYLE = {\r\n  fontSize: 20,\r\n  fontWeight: 600,\r\n  paddingLeft: CELL_PADDING,\r\n  paddingRight: CELL_PADDING\r\n};\r\n\r\nexport const getColumns = (awards, compact) => {\r\n    return [\r\n        {\r\n            name: \"Player\",\r\n            selector: \"Color\",\r\n            width: \"50px\",\r\n            style: {\r\n                paddingLeft: CELL_PADDING,\r\n                paddingRight: CELL_PADDING\r\n            },\r\n            conditionalCellStyles: [\r\n                {\r\n                    when: row => row.Color === 'Purple',\r\n                    style: {\r\n                        background: 'linear-gradient(rgb(146, 112, 166), rgb(188, 153, 238))',\r\n                        fontWeight: 600\r\n                    }\r\n                },\r\n                {\r\n                    when: row => row.Color === 'Green',\r\n                    style: {\r\n                        background: 'linear-gradient(rgb(76, 164, 70), rgb(153, 208, 142))',\r\n                        fontWeight: 600\r\n                    }\r\n                },\r\n                {\r\n                    when: row => row.Color === 'Yellow',\r\n                    style: {\r\n                        background: 'linear-gradient(rgb(254, 197, 0), rgb(176, 164, 118))',\r\n                        fontWeight: 600\r\n                    }\r\n                },\r\n                {\r\n                    when: row => row.Color === 'Red',\r\n                    style: {\r\n                        background: 'linear-gradient(rgb(253, 27, 75), rgb(247, 151, 151))',\r\n                        fontWeight: 600\r\n                    }\r\n                },\r\n                {\r\n                    when: row => row.Color === 'Blue',\r\n                    style: {\r\n                        background: 'linear-gradient(rgb(43, 157, 254), rgb(115, 147, 242))',\r\n                        fontWeight: 600\r\n                    }\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            name: \"Sum\",\r\n            selector: \"FinalScore\",\r\n            // convert px to int, add a buffer, then back to px string\r\n            width: `${parseInt(SMALL_COL_WIDTH.split(\"px\")[0], 10) + 10}px`,\r\n            style: COL_STYLE,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: \"Cty\",\r\n            selector: \"CityScore\",\r\n            width: SMALL_COL_WIDTH,\r\n            style: COL_STYLE,\r\n            omit: compact\r\n        },\r\n        {\r\n            name: \"Grn\",\r\n            selector: \"GreeneryScore\",\r\n            width: SMALL_COL_WIDTH,\r\n            style: COL_STYLE,\r\n            omit: compact\r\n        },\r\n        {\r\n            name: \"VP\",\r\n            selector: \"VictoryPoints\",\r\n            width: SMALL_COL_WIDTH,\r\n            style: COL_STYLE,\r\n            omit: compact\r\n        },\r\n        {\r\n            name: \"MS\",\r\n            selector: \"MileStones\",\r\n            width: SMALL_COL_WIDTH,\r\n            style: COL_STYLE,\r\n            omit: compact\r\n        },\r\n        {\r\n            name: \"Aw\",\r\n            selector: \"Awards\",\r\n            width: SMALL_COL_WIDTH,\r\n            style: COL_STYLE,\r\n            omit: awards || compact\r\n        }\r\n    ];\r\n}\r\n","import io from \"socket.io-client\";\r\nimport * as React from \"react\";\r\nimport DataTable, {createTheme} from 'react-data-table-component';\r\nimport {getColumns} from \"./columns\";\r\n\r\nconst { Map, fromJS } = require('immutable');\r\n\r\nconst CELL_PADDING = 3;\r\n\r\nconst customStyles = {\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: CELL_PADDING,\r\n      paddingRight: CELL_PADDING,\r\n    }\r\n  }\r\n}\r\n\r\ncreateTheme('default', {\r\n    background: \"rgba(255, 255, 255, 0)\",\r\n    text: {\r\n      primary: '#FFFFFF',\r\n      secondary: 'rgba(255, 255, 255, 0.7)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n});\r\n\r\nconst createScoreData = (playerStates, countAwards) => {\r\n    return playerStates.entrySeq().map(([key, value])=> {\r\n        let s = value.get(\"Score\")\r\n\r\n        // just asmodee things\r\n        let color = value.get(\"Color\");\r\n        if (color === 'Grey') {\r\n          color = 'Purple';\r\n        }\r\n\r\n        s = s.set(\"Color\", color);\r\n\r\n        s = s.set(\"MileStones\", value\r\n            .getIn([\"Score\", \"MilestoneScore\"])\r\n            .map(value => value.get(\"Score\"))\r\n            .reduce((acc, val) => acc + val) || 0);\r\n\r\n        s = s.set(\"Awards\", value\r\n            .getIn([\"Score\", \"AwardScore\"])\r\n            .map(value => value.get(\"Score\"))\r\n            .reduce((acc, val) => acc + val) || 0);\r\n\r\n\r\n        // subtract awards score from total if checked\r\n        if (countAwards) {\r\n          const finalScore = s.get(\"FinalScore\");\r\n          const awardScore = value.getIn(['Score', 'AwardScore'])\r\n            .map(value => value.get(\"Score\"))\r\n            .reduce((acc, val) => acc + val);\r\n          const totalWithoutAwards = finalScore - awardScore;\r\n          s = s.set(\"FinalScore\", totalWithoutAwards);\r\n        }\r\n\r\n        return s;\r\n    });\r\n}\r\n\r\nclass TerraSummary extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        playerStates: props.data === undefined ? Map() : fromJS(props.data),\r\n        countAwards: false,\r\n        compact: false,\r\n        streamerMode: false,\r\n      };\r\n\r\n      this.handleCountAwards = this.handleCountAwards.bind(this);\r\n      this.handleCompact = this.handleCompact.bind(this);\r\n      this.handleStreamerMode = this.handleStreamerMode.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const socket = io(\"localhost:5000\");\r\n\r\n        socket.on(\"connect\", () => {\r\n            console.log(\"connected!\")\r\n        })\r\n\r\n        socket.on(\"update\", (data) => {\r\n            this.setState({ playerStates: this.state.playerStates.merge(fromJS(data))})\r\n        })\r\n    }\r\n\r\n    handleCountAwards(event) {\r\n      this.setState({ countAwards: Boolean(event.target.checked) });\r\n    }\r\n\r\n    handleCompact(event) {\r\n      this.setState({ compact: Boolean(event.target.checked )});\r\n    }\r\n\r\n    handleStreamerMode(event) {\r\n      this.setState({ streamerMode: Boolean(event.target.checked )});\r\n    }\r\n\r\n    render() {\r\n        const columns = getColumns(!this.state.countAwards, this.state.compact);\r\n        const scores = createScoreData(this.state.playerStates, !this.state.countAwards);\r\n        const theme = this.state.streamerMode ? 'default' : 'dark';\r\n\r\n        return(\r\n          <DataTable\r\n            columns={columns}\r\n            data={scores.toJS()}\r\n            theme={theme}\r\n            dense\r\n            noHeader\r\n            subHeader\r\n            subHeaderAlign=\"left\"\r\n            subHeaderComponent={\r\n              <div style={{ marginBottom: \"30px\", marginLeft: 0, float: \"left\"}}>\r\n                <label style={{ color: 'white' }}>Awards?</label>\r\n                <input style={{\r\n                  marginRight: 10,\r\n                  color: 'white'\r\n                }} type=\"checkbox\" checked={Boolean(this.state.countAwards)} onChange={this.handleCountAwards}/>\r\n                <br/>\r\n                <label style={{ color: 'white', marginRight: 10 }}>Compact?</label>\r\n                <input type=\"checkbox\" checked={Boolean(this.state.compact)} onChange={this.handleCompact}/>\r\n                <br/>\r\n                <label style={{ color: 'white', marginRight: 10 }}>Streamer Mode?</label>\r\n                <input type=\"checkbox\" checked={Boolean(this.state.streamerMode)} onChange={this.handleStreamerMode}/>\r\n              </div>\r\n            }\r\n            customStyles={customStyles}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TerraSummary;\r\n","export const mockData = {\r\n   \"1\":{\r\n      \"FinalScore\":0,\r\n      \"TerraformingRating\":21,\r\n      \"ResourceData\":{\r\n         \"MegaCredit\":{\r\n            \"Quantity\":39,\r\n            \"Production\":0\r\n         },\r\n         \"Steel\":{\r\n            \"Quantity\":0,\r\n            \"Production\":0\r\n         },\r\n         \"Titanium\":{\r\n            \"Quantity\":0,\r\n            \"Production\":0\r\n         },\r\n         \"Plant\":{\r\n            \"Quantity\":0,\r\n            \"Production\":0\r\n         },\r\n         \"Energy\":{\r\n            \"Quantity\":0,\r\n            \"Production\":0\r\n         },\r\n         \"Heat\":{\r\n            \"Quantity\":0,\r\n            \"Production\":3\r\n         }\r\n      },\r\n      \"CardsInHand\":[\r\n         \"Colonizer Training Camp\",\r\n         \"Zeppelins\",\r\n         \"Ants\",\r\n         \"Martian Rails\",\r\n         \"Asteroid Mining Consortium\",\r\n         \"Shuttles\",\r\n         \"Imported Nitrogen\",\r\n         \"Trans-Neptune Probe\",\r\n         \"Nitrite Reducing Bacteria\",\r\n         \"Energy Tapping\",\r\n         \"Capital\",\r\n         \"Mangrove\",\r\n         \"Urbanized Area\",\r\n         \"Ice cap Melting\",\r\n         \"Industrial Microbes\",\r\n         \"Building Industries\"\r\n      ],\r\n      \"CardsPlayed\":[\r\n         \"Subterranean Reservoir\"\r\n      ],\r\n      \"PlayerId\":1,\r\n      \"IsLocalPlayer\":true,\r\n      \"Color\":\"Green\",\r\n      \"Score\":{\r\n         \"FinalScore\":43,\r\n         \"TerraFormingRating\":21,\r\n         \"VictoryPoints\":0,\r\n         \"GreeneryScore\":0,\r\n         \"CityScore\":15,\r\n         \"MilestoneScore\":[\r\n            {\r\n               \"Name\":\"Planner\",\r\n               \"Score\":5\r\n            }\r\n         ],\r\n         \"AwardScore\":[\r\n            {\r\n               \"Name\":\"Landlord\",\r\n               \"Score\":2\r\n            },\r\n            {\r\n               \"Name\":\"Banker\",\r\n               \"Score\":0\r\n            },\r\n            {\r\n               \"Name\":\"Scientist\",\r\n               \"Score\":0\r\n            },\r\n            {\r\n               \"Name\":\"Thermalist\",\r\n               \"Score\":0\r\n            },\r\n            {\r\n               \"Name\":\"Miner\",\r\n               \"Score\":0\r\n            }\r\n         ]\r\n      }\r\n   },\r\n   \"2\":{\r\n      \"FinalScore\":0,\r\n      \"TerraformingRating\":26,\r\n      \"ResourceData\":{\r\n         \"MegaCredit\":{\r\n            \"Quantity\":9,\r\n            \"Production\":0\r\n         },\r\n         \"Steel\":{\r\n            \"Quantity\":0,\r\n            \"Production\":0\r\n         },\r\n         \"Titanium\":{\r\n            \"Quantity\":2,\r\n            \"Production\":0\r\n         },\r\n         \"Plant\":{\r\n            \"Quantity\":1,\r\n            \"Production\":1\r\n         },\r\n         \"Energy\":{\r\n            \"Quantity\":0,\r\n            \"Production\":1\r\n         },\r\n         \"Heat\":{\r\n            \"Quantity\":4,\r\n            \"Production\":2\r\n         }\r\n      },\r\n      \"CardsInHand\":[\r\n         \"Nitrophilic Moss\",\r\n         \"Fish\",\r\n         \"Physics Complex\"\r\n      ],\r\n      \"CardsPlayed\":[\r\n         \"Technology Demonstration\",\r\n         \"Dust Seals\",\r\n         \"Geothermal Power\",\r\n         \"Development Center\",\r\n         \"Deimos Down\",\r\n         \"Tardigrades\",\r\n         \"Magnetic Field Dome\",\r\n         \"Power Plant\"\r\n      ],\r\n      \"PlayerId\":2,\r\n      \"IsLocalPlayer\":false,\r\n      \"Color\":\"Grey\",\r\n      \"Score\":{\r\n         \"FinalScore\":99,\r\n         \"TerraFormingRating\":26,\r\n         \"VictoryPoints\":57,\r\n         \"GreeneryScore\":10,\r\n         \"CityScore\":0,\r\n         \"MilestoneScore\":[\r\n\r\n         ],\r\n         \"AwardScore\":[\r\n            {\r\n               \"Name\":\"Landlord\",\r\n               \"Score\":2\r\n            },\r\n            {\r\n               \"Name\":\"Banker\",\r\n               \"Score\":0\r\n            },\r\n            {\r\n               \"Name\":\"Scientist\",\r\n               \"Score\":2\r\n            },\r\n            {\r\n               \"Name\":\"Thermalist\",\r\n               \"Score\":2\r\n            },\r\n            {\r\n               \"Name\":\"Miner\",\r\n               \"Score\":0\r\n            }\r\n         ]\r\n      }\r\n   },\r\n   \"3\":{\r\n      \"FinalScore\":0,\r\n      \"TerraformingRating\":21,\r\n      \"ResourceData\":{\r\n         \"MegaCredit\":{\r\n            \"Quantity\":10,\r\n            \"Production\":1\r\n         },\r\n         \"Steel\":{\r\n            \"Quantity\":0,\r\n            \"Production\":0\r\n         },\r\n         \"Titanium\":{\r\n            \"Quantity\":0,\r\n            \"Production\":0\r\n         },\r\n         \"Plant\":{\r\n            \"Quantity\":2,\r\n            \"Production\":1\r\n         },\r\n         \"Energy\":{\r\n            \"Quantity\":0,\r\n            \"Production\":3\r\n         },\r\n         \"Heat\":{\r\n            \"Quantity\":0,\r\n            \"Production\":0\r\n         }\r\n      },\r\n      \"CardsInHand\":[\r\n         \"Commercial District\",\r\n         \"Aerobraked Ammonia Asteroid\"\r\n      ],\r\n      \"CardsPlayed\":[\r\n         \"Invention Contest\",\r\n         \"Lagrange Observatory\",\r\n         \"Search For Life\",\r\n         \"Archaebacteria\",\r\n         \"Earth Office\",\r\n         \"Regolith Eaters\",\r\n         \"Tectonic Stress Power\"\r\n      ],\r\n      \"PlayerId\":3,\r\n      \"IsLocalPlayer\":false,\r\n      \"Color\":\"Yellow\",\r\n      \"Score\":{\r\n         \"FinalScore\":40,\r\n         \"TerraFormingRating\":21,\r\n         \"VictoryPoints\":2,\r\n         \"GreeneryScore\":1,\r\n         \"CityScore\":1,\r\n         \"MilestoneScore\":[\r\n\r\n         ],\r\n         \"AwardScore\":[\r\n            {\r\n               \"Name\":\"Landlord\",\r\n               \"Score\":5\r\n            },\r\n            {\r\n               \"Name\":\"Banker\",\r\n               \"Score\":0\r\n            },\r\n            {\r\n               \"Name\":\"Scientist\",\r\n               \"Score\":5\r\n            },\r\n            {\r\n               \"Name\":\"Thermalist\",\r\n               \"Score\":5\r\n            },\r\n            {\r\n               \"Name\":\"Miner\",\r\n               \"Score\":0\r\n            }\r\n         ]\r\n      }\r\n   }\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport TerraSummary from \"./terrasummary/terrasummary\";\nimport {mockData} from \"./mockdata\";\n\n// Use <TerraSummary data={mockData} /> to use mock data\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n          <TerraSummary data={mockData} />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}